usage: fortisiem_sigma_tool.py [-h] [--inputs INPUTS] [--ymlFile YMLFILE]
                               [--output OUTPUT] [--ruleFile RULEFILE]
                               [--ruleStartIndex RULESTARTINDEX]
                               [--action ACTION] [--forGui]

Convert Sigma rules int FortiSIEM signatures.

optional arguments:
  -h, --help            show this help message and exit
  --inputs INPUTS, -i INPUTS
                        Used to input files
  --ymlFile YMLFILE, -f YMLFILE
                        Used to input one yml file
  --output OUTPUT, -o OUTPUT
                        It's a file used to output results
  --ruleFile RULEFILE, -r RULEFILE
                        It's a rule file which needs to be updated.
  --ruleStartIndex RULESTARTINDEX, -s RULESTARTINDEX
                        Options Rule start id.
  --action ACTION, -a ACTION
                        
                        How to deal with the YAML file.
                            New: Only output the new rules which aren't in the '--ruleFile' file. 
                            Update: Update the '--ruleFile' file. It only updates rules when the rule is found in '--inputs'.
                            OnlyUpdateLink: Only update the file link in rules in the '--ruleFile' file.
                            FullUpdate: Update all rules in the '--ruleFile' file. Delete, update and add rules in '--ruleFile'
                            Diff: Get deleted rules between two rule files.
                            ReportToCsv: Generate CSV file from report file.
                            RuleToCsv: Generate CSV file from rule files.
  --forGui              The XML format can be imported into FortiSIEM by GUI




- Goto pySigma-backend-fortisiem/

###### Generate New rules file.
- ./tools/fortisiem_sigma_tool.py -o NewRules.xml -f YML_file_full_path
   Generate rule.xml from YML_file_full_path

- ./tools/fortisiem_sigma_tool.py -o NewRules.xml -i rules/linux
  Generate rule.xml from yml files in rules/linux 

- ./tools/fortisiem_sigma_tool.py -o NewRules.xml -i rules/windows
  Generate rule.xml from yml files in rules/windows 

- ./tools/fortisiem_sigma_tool.py  -o NewRules.xml -i list_YML_file_name.csv
  Generate rule.xml from yml files listed in list_YML_file_name.csv

###### update the old rule file.
- ./tools/fortisiem_sigma_tool.py -a New -o out/test.xml -i rules/windows --ruleFile OrigRules.xml
   According to yml files in rules/windows to update OrigRules.xml.
   Update all rules. Deleted rules, Add rules, Update rules.

###### Only update the modified rules
- ./tools/fortisiem_sigma_tool.py -a Update -o NewRules.xml -i rules/windows --ruleFile OrigRules.xml
  According to yml files in rules/windows to update OrigRules.xml. 
  Only update rules which can be found in rules/windows 

###### Only update the file link in OrigRules.xml 
- ./tools/fortisiem_sigma_tool.py -a OnlyUpdateLink -o out/test.xml -i  rules/windows/ --ruleFile OrigRules.xml
  According to yml files listed in rules/windows/ to update file link in OrigRules.xml

###### Only output new rules which are not in old rule file.
- ./tools/fortisiem_sigma_tool.py -a New -o out/test.xml -i rules/windows --ruleFile OrigRules.xml

  
###### To collect information from rule file
- ./tools/fortisiem_sigma_tool.py  --ruleToCsv -o rules.csv --i  OrigRules.xml 
  Generate CSV file from a rule file

- ./tools/fortisiem_sigma_tool.py  --ruleToCsv -o allRules.csv --i  ../../data-definition/rules/ 
  Generate CSV file from  rule files

-./tools/fortisiem_sigma_tool.py --reportToCsv -o reports.csv --i ../../data-definition/reports/WLAN_REPORTS.xml
  Generate CSV file from a report files

-./tools/fortisiem_sigma_tool.py --reportToCsv -o allReports.csv --i ../../data-definition/reports
  Generate CSV file from report files

./tools/fortisiem_sigma_tool.py --diff -o out/deletedFile.csv --ruleFile oldRuleFile.xml  -i newRuleFile.xml
 Find the deleted rules in newRuleFile.xml from oldRuleFile.xml

###### getYmlStatusInSigmaRepo.sh
   This script is to get the yml file status in sigma repo

   Example: 
    1. to get the changes of yml files under sigma
       getYmlStatusInSigmaRepo.sh sigma "7f3eff58e17c1edec877cf45972726588d009940" "9078b857a186f19cd9b1c7f939df989b0bb5ca4b" changes.csv 
    2. to get the changes of yml files under sigma/rules
       getYmlStatusInSigmaRepo.sh sigma "7f3eff58e17c1edec877cf45972726588d009940" "9078b857a186f19cd9b1c7f939df989b0bb5ca4b" changes.csv rules 

##### Steps to update local rule file from https://github.com/Neo23x0/sigma.
    1. You have to know your local file is generated from which commit in sigma Repo
    2. Use getYmlStatusInSigmaRepo.sh to get the changes.csv
    3. Find all the renamed record and save it in tools/config/RenameFileName.csv
       Record format: FULLPATH,oldFileName,newFileName.
       The file name is only contain the filename, not path
       for example.
           FULLPATH,proc_creation_macos_add_to_admin_group.yml,proc_creation_macos_add_to_admin_group.yml
    4. Use command to update old rule file.
        

